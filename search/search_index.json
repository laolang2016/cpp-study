{"config":{"lang":["en"],"separator":"[\\s\\-\uff0c\u3002]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"c/prepare/","title":"ubuntu c \u5f00\u53d1\u73af\u5883\u642d\u5efa","text":""},{"location":"c/prepare/#cunit","title":"CUnit","text":""},{"location":"c/prepare/#_1","title":"\u53c2\u8003\u8d44\u6599","text":"<p>\u5b98\u7f51 : https://cunit.sourceforge.net/</p> <p>github: https://github.com/jacklicn/CUnit</p> <p>\u5b98\u65b9\u624b\u518c: https://cunit.sourceforge.net/doc/index.html</p> <p>\u4e2d\u6587\u624b\u518c: \u3010\u5355\u5143\u6d4b\u8bd5\u3011CUnit\u7528\u6237\u624b\u518c\uff08\u4e2d\u6587\uff09</p> <p>\u7b80\u660e\u6559\u7a0b: \u3010\u5355\u5143\u6d4b\u8bd5\u3011CUnit\u5355\u5143\u6d4b\u8bd5\u6846\u67b6\uff08\u4e0d\u652f\u6301mock\u529f\u80fd\uff09</p> <p>ubuntu\u4e0b\u5b89\u88c5CUnit\u51fa\u73b0\u7684\u95ee\u9898\u53ca\u89e3\u51b3</p>"},{"location":"c/prepare/#_2","title":"\u5b89\u88c5","text":"<pre><code>sudo apt-get update\nsudo apt-get install build-essential automake autoconf libtool\nmv configure.in configure.ac\naclocal\nautoconf autoheader libtoolize --automake --copy --debug --force\nautomake --add-missing\nautomake\n./configure make\nsudo make install\n</code></pre>"},{"location":"c/prepare/#_3","title":"\u6d4b\u8bd5","text":"test.c<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n#include &lt;CUnit/Basic.h&gt;\n#include &lt;CUnit/Automated.h&gt;\n/* \u88ab\u6d4b\u8bd5\u7684\u51fd\u6570\uff0c\u5728\u5f53\u4e2d\u6545\u610f\u5b89\u88c5\u4e86\u4e00\u4e2aBUG */\nstatic int sum(int a, int b)\n{\nif (a &gt; 4)\n{\nreturn 0;\n}\nreturn (a + b);\n}\nstatic int suite_init(void)\n{\nreturn 0;\n}\nstatic int suite_clean(void)\n{\nreturn 0;\n}\nstatic void test_sum(void)\n{\nCU_ASSERT_EQUAL(sum(1, 2), 3);\nCU_ASSERT_EQUAL(sum(5, 2), 7);\n}\nint main()\n{\nCU_pSuite pSuite = NULL;\n/* initialize the CUnit test registry */\nif (CUE_SUCCESS != CU_initialize_registry())\n{\nreturn CU_get_error();\n}\n/* add a suite to the registry */\npSuite = CU_add_suite(\"suite_sum\", suite_init, suite_clean);\nif (NULL == pSuite)\n{\nCU_cleanup_registry();\nreturn CU_get_error();\n}\n/* add the tests to the suite */\nif ((NULL == CU_add_test(pSuite, \"test_sum\", test_sum)))\n{\nCU_cleanup_registry();\nreturn CU_get_error();\n}\n// basic\nCU_basic_set_mode(CU_BRM_VERBOSE);\nCU_basic_run_tests();\n// automated\nCU_list_tests_to_file();\nCU_automated_run_tests();\n/* Clean up registry and return */\nCU_cleanup_registry();\nreturn CU_get_error();\n}\n</code></pre> <p>\u7f16\u8bd1</p> <pre><code> gcc test.c `pkg-config --libs --cflags cunit` -o test\n</code></pre> <p>\u6b64\u65f6\u63a7\u5236\u53f0\u6709\u4e86 basic \u6a21\u5f0f\u7684\u8f93\u51fa, \u5e76\u4e14\u6709\u4e86 automated \u6a21\u5f0f\u7684 xml \u6587\u4ef6</p> <p>\u7136\u540e\u4ece\u5b89\u88c5\u5305\u590d\u5236\u5982\u4e0b\u51e0\u4e2a\u6587\u4ef6, \u548c cunit \u8f93\u51fa\u7684 xml \u540c\u7ea7 * CUnit-List.dtd  CUnit-List.xsl  CUnit-Run.dtd * CUnit-Run.xsl</p> <p>\u5728\u672c\u5730\u8d77\u4e00\u4e2a\u670d\u52a1\u5668, \u6bd4\u5982 npm \u7684 serve , \u4e24\u4e2a\u6587\u4ef6\u73b0\u5b9e\u6548\u679c\u5982\u4e0b</p> <p></p> <p></p>"},{"location":"c/prepare/#gcovlcov","title":"GCOV+LCOV \u4ee3\u7801\u8c03\u8bd5\u548c\u8986\u76d6\u7387\u7edf\u8ba1\u5de5\u5177","text":""},{"location":"c/prepare/#_4","title":"\u53c2\u8003","text":"<p>GCOV+LCOV \u4ee3\u7801\u8c03\u8bd5\u548c\u8986\u76d6\u7387\u7edf\u8ba1\u5de5\u5177</p>"},{"location":"c/prepare/#_5","title":"\u4ee3\u7801","text":"cunit_sample.cmodule.cmodule.h <pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n#include &lt;CUnit/Basic.h&gt;\n#include &lt;CUnit/Automated.h&gt;\n#include \"module.h\"\nstatic int suite_init(void)\n{\nreturn 0;\n}\nstatic int suite_clean(void)\n{\nreturn 0;\n}\nstatic void test_sum(void)\n{\nCU_ASSERT_EQUAL(sum(1, 2), 3);\nCU_ASSERT_EQUAL(sum(5, 2), 7);\n}\nint main()\n{\nCU_pSuite pSuite = NULL;\n/* initialize the CUnit test registry */\nif (CUE_SUCCESS != CU_initialize_registry())\n{\nreturn CU_get_error();\n}\n/* add a suite to the registry */\npSuite = CU_add_suite(\"suite_sum\", suite_init, suite_clean);\nif (NULL == pSuite)\n{\nCU_cleanup_registry();\nreturn CU_get_error();\n}\n/* add the tests to the suite */\nif ((NULL == CU_add_test(pSuite, \"test_sum\", test_sum)))\n{\nCU_cleanup_registry();\nreturn CU_get_error();\n}\n// basic\nCU_basic_set_mode(CU_BRM_VERBOSE);\nCU_basic_run_tests();\n// automated\nCU_list_tests_to_file();\nCU_automated_run_tests();\n/* Clean up registry and return */\nCU_cleanup_registry();\nreturn CU_get_error();\n}\n</code></pre> <pre><code>#include \"module.h\"\nint sum(int a, int b)\n{\nif (a &gt; 4)\n{\nreturn 0;\n}\nif( a &lt; 0 )\n{\nreturn -1;\n}\nreturn (a + b);\n}\n</code></pre> <pre><code>#ifndef __CUNIT_SAMPLE_MODULE_\n#define __CUNIT_SAMPLE_MODULE_\nint sum(int a, int b);\n#endif\n</code></pre>"},{"location":"c/prepare/#_6","title":"\u7f16\u8bd1\u548c\u8fd0\u884c","text":"<pre><code>gcc -g -c module.c -o module.o `pkg-config --cflags cunit` -fprofile-arcs -ftest-coverage\ngcc -g -c cunit_sample.c -o cunit_sample.o `pkg-config --cflags cunit` -fprofile-arcs -ftest-coverage\ngcc module.o cunit_sample.o -o test `pkg-config --libs cunit` -fprofile-arcs -ftest-coverage -lpthread\n./test\n</code></pre> <p>Note</p> <p>\u5fc5\u987b\u8981\u8fd0\u884c\u624d\u53ef\u4ee5</p>"},{"location":"c/prepare/#gcov-lcov","title":"gcov + lcov","text":""},{"location":"c/prepare/#_7","title":"\u751f\u6210\u8986\u76d6\u7387\u4fe1\u606f","text":"<p>\u4e0a\u4e00\u6b65\u5df2\u7ecf\u751f\u6210\u4e86 <code>.gcda</code> \u6587\u4ef6, \u6b64\u6587\u4ef6\u5305\u542b\u7a0b\u5e8f\u57fa\u672c\u5757\u8df3\u8f6c\u4fe1\u606f, \u73b0\u5728\u751f\u6210\u8986\u76d6\u7387\u4fe1\u606f <pre><code>gcov module.c\ngcov cunit_sample.c\n</code></pre></p> <p>\u73b0\u5728\u53ef\u4ee5\u67e5\u770b\u8986\u76d6\u7387\u4fe1\u606f</p> <pre><code>laolang@laolang-pc:~/code/c/hello-c/one$ cat module.c.gcov -:    0:Source:module.c\n        -:    0:Graph:module.gcno\n        -:    0:Data:module.gcda\n        -:    0:Runs:1\n        -:    1:#include \"module.h\"\n4:    2:int sum(int a, int b)\n-:    3:{\n4:    4:    if (a &gt; 4)\n-:    5:    {\n2:    6:        return 0;\n-:    7:    }\n2:    8:    if( a &lt; 0 )\n-:    9:    {\n#####:   10:        return -1;\n-:   11:    }\n2:   12:    return (a + b);\n-:   13:}\nlaolang@laolang-pc:~/code/c/hello-c/one$ </code></pre>"},{"location":"c/prepare/#_8","title":"\u751f\u6210\u6587\u6863","text":"<pre><code>lcov -d . -t '\u6211\u7684\u7b2c\u4e00\u4e2a\u6d4b\u8bd5' -o app.info -b . -c\ngenhtml app.info -o cc_result\n</code></pre> <p>\u6253\u5f00 <code>cc_result/index.html</code></p> <p></p> <p></p>"},{"location":"c/prepare/#zlog","title":"zlog","text":"<p>github: https://github.com/HardySimpson/zlog/</p> <p>\u4e2d\u6587\u624b\u518c: http://hardysimpson.github.io/zlog/UsersGuide-CN.html</p>"},{"location":"c/prepare/#_9","title":"\u5b89\u88c5","text":"<pre><code>make\nsudo make install\n</code></pre>"},{"location":"c/prepare/#_10","title":"\u6d4b\u8bd5","text":"test.ctest_hello.conf <pre><code>#include &lt;stdio.h&gt;\n#include &lt;zlog.h&gt;\nint main()\n{\nint rc;\nzlog_category_t *c;\nrc = zlog_init(\"test_hello.conf\");\nif (rc)\n{\nprintf(\"init failed\\n\");\nreturn -1;\n}\nc = zlog_get_category(\"my_cat\");\nif (!c)\n{\nprintf(\"get cat fail\\n\");\nzlog_fini();\nreturn -2;\n}\nzlog_info(c, \"hello, zlog\");\nzlog_fini();\nreturn 0;\n}\n</code></pre> <pre><code>[formats]\n\nsimple = \"%d().%ms %p %V [%F:%L] - %m%n\"\n\n[rules]\n\nmy_cat.DEBUG    &gt;stdout;    simple\n*.*     \"app.log\", 10MB * 0 ~ \"app-%d(%Y%m%d).#2s.log\"\n</code></pre> <p><code>*.*     \"app.log\", 10MB * 0 ~ \"app-%d(%Y%m%d).#2s.log\"</code> \u542b\u4e49\u4e3a: \u65e5\u5fd7\u540d\u79f0\u4e3a app.log , \u65e5\u5fd7\u6587\u4ef6\u6ca110MB\u5f00\u59cb\u8f6c\u5f53, \u8f6c\u6863\u683c\u5f0f\u4e3a app-2023-05-04.01.log</p> <p>\u7f16\u8bd1 <pre><code>gcc test.c -I/usr/local/include -L/usr/local/lib -lzlog -o test\n</code></pre></p> <p>\u8f93\u51fa\u5982\u4e0b <pre><code>laolang@laolang-pc:~/code/c/hello-c/one$ ./test 2023-06-01 07:51:41.599 34977 INFO [test.c:29] - hello, zlog\nlaolang@laolang-pc:~/code/c/hello-c/one$ cat app.log 2023-06-01 07:51:41 INFO [34977:test.c:29] hello, zlog\nlaolang@laolang-pc:~/code/c/hello-c/one$ </code></pre></p> <p>zlog-chk-conf\u53ef\u4ee5\u68c0\u67e5\u914d\u7f6e\u6587\u4ef6\u662f\u5426\u6b63\u786e <pre><code>laolang@laolang-pc:~/code/c/hello-c/one$ zlog-chk-conf test_hello.conf 06-01 07:55:22 ERROR (35128:rule.c:721) in conf file can't find format[imple], pls check\n06-01 07:55:22 ERROR (35128:conf.c:538) zlog_rule_new fail [my_cat.DEBUG    &gt;stdout;    imple]\n06-01 07:55:22 ERROR (35128:conf.c:340) parse configure file[test_hello.conf]line_no[7] fail\n06-01 07:55:22 ERROR (35128:conf.c:341) line[my_cat.DEBUG    &gt;stdout;    imple]\n06-01 07:55:22 ERROR (35128:conf.c:177) zlog_conf_build_with_file fail\n06-01 07:55:22 ERROR (35128:zlog.c:93) zlog_conf_new[test_hello.conf] fail\n06-01 07:55:22 ERROR (35128:zlog.c:135) zlog_init_inner[test_hello.conf] fail\n06-01 07:55:22 ERROR (35128:zlog.c:150) ------zlog_init fail end------\n\n---[test_hello.conf] syntax error, see error message above\nlaolang@laolang-pc:~/code/c/hello-c/one$ zlog-chk-conf test_hello.conf --[test_hello.conf] syntax right\nlaolang@laolang-pc:~/code/c/hello-c/one$ </code></pre></p>"},{"location":"c/prepare/#astyle","title":"AStyle","text":""},{"location":"c/prepare/#_11","title":"\u53c2\u8003\u8d44\u6599","text":"<p>\u5b98\u7f51: https://astyle.sourceforge.net/</p> <p>Google \u5f00\u6e90\u9879\u76ee\u98ce\u683c\u6307\u5357\u2014\u2014\u4e2d\u6587\u7248: https://zh-google-styleguide.readthedocs.io/en/latest/</p> <p>Artistic Style \u4f7f\u7528\u6559\u7a0b\uff08\u4e2d\u6587\u7248\uff09</p> <p>Astyle \u5feb\u901f\u5165\u95e8\uff0c\u5e38\u7528\u6307\u4ee4</p> <p>AStyle\u81ea\u52a8\u6392\u7248\u4ee3\u7801\u65b9\u6cd5\uff08\u8d85\u8be6\u7ec6\uff09</p>"},{"location":"c/prepare/#_12","title":"\u5b89\u88c5","text":"<pre><code>tar xf astyle-3.3.1.tar.bz2\ncd build\ncd gcc\nmake\nsudo make install\n</code></pre>"},{"location":"c/prepare/#_13","title":"\u914d\u7f6e","text":"<pre><code># braces and indent\nstyle=google\n# \u7f29\u8fdb\u4f7f\u7528 4 \u4e2a\u7a7a\u683c\nindent=spaces=4\n# indentation ----------------------------------------------------------------------------------------------------------\n# \u7f29\u8fdb switch case\nindent-switches\nindent-continuation=4\nindent-preproc-block\nindent-preproc-define\n# \u4ee3\u7801\u5bbd\u5ea6\nmin-conditional-indent=0\nmax-continuation-indent=120\n# \u6ce8\u91ca\u548c\u4ee3\u7801\u4e00\u8d77\u7f29\u8fdb\nindent-col1-comments\n# padding --------------------------------------------------------------------------------------------------------------\n# \u64cd\u4f5c\u7b26\u4e24\u7aef\u63d2\u5165\u4e00\u4e2a\u7a7a\u683c\npad-oper\n# \u5728if.for,while\u7b49\u6761\u4ef6\u6216\u5faa\u73af\u8bed\u53e5\u5173\u952e\u5b57\u548c\u62ec\u53f7\u4e4b\u95f4\u63d2\u5165\u7a7a\u683c\npad-header\nunpad-paren\n# \u6307\u9488\u8d34\u8fd1\u7c7b\u578b\nalign-pointer=type\n# formatting\n# \u4ece\u540c\u4e00\u884c\u4e2d\u7684\u8bed\u53e5\u4e2d\u65ad\u5f00\u4e00\u884c\u6807\u9898\uff08\u4f8b\u5982\uff0c\u201c if\u201d\uff0c\u201c while\u201d\uff0c\u201c else\u201d\uff0c\u2026\uff09\nbreak-one-line-headers\nkeep-one-line-blocks\n# \u4ece\u540c\u4e00\u884c\u4e2d\u7684\u8bed\u53e5\u4e2d\u65ad\u5f00\u4e00\u884c\u6807\u9898\uff08\u4f8b\u5982\uff0c\u201c if\u201d\uff0c\u201c while\u201d\uff0c\u201c else\u201d\uff0c\u2026\uff09\nkeep-one-line-statements\n# \u5c06\u5236\u8868\u7b26\u8f6c\u6362\u4e3a\u7a7a\u683c\uff0c\u63d2\u5165\u7684\u7a7a\u683c\u6570\u5c06\u4fdd\u6301\u5236\u8868\u7b26\u7684\u95f4\u8ddd\u3002\u5f15\u53f7\u4e2d\u7684\u5236\u8868\u7b26\u4e0d\u4f1a\u88ab\u66ff\u6362\nconvert-tabs\n#close-templates\n</code></pre>"},{"location":"c/prepare/#vscode","title":"vscode \u914d\u7f6e","text":"<pre><code>{\n//\u914d\u7f6e\uff1a\u683c\u5f0f\u5316\u4ee3\u7801\u7684\u8bed\u8a00\n\"astyle.additional_languages\": [\n\"c\",\n\"cpp\",\n],\n//\u914d\u7f6e\uff1a\u4ee3\u7801\u683c\u5f0f\u5316\u98ce\u683c\n\"astyle.cmd_options\": [\n\"style=google\",\n\"indent=spaces=4\", //\u7f29\u8fdb\u4f7f\u7528 4 \u4e2a\u7a7a\u683c\n\"indent-switches\", // \u7f29\u8fdb switch case\n\"indent-continuation=4\",\n\"indent-preproc-block\", // \u7f29\u8fdb\u5728\u96f6\u7ea7\u522b\u62ec\u53f7\u548c\u540d\u79f0\u7a7a\u95f4\u4e2d\u7684\u9884\u7f16\u8bd1\u5757\n\"indent-preproc-define\", //\u7f29\u8fdb\u4ee5\u53cd\u659c\u6760\u7ed3\u5c3e\u7684\u591a\u884c\u9884\u5904\u7406\u5668\u5b9a\u4e49\n\"min-conditional-indent=0\", // \u4ee3\u7801\u5bbd\u5ea6\n\"max-continuation-indent=120\", // \u4ee3\u7801\u5bbd\u5ea6\n\"indent-col1-comments\", // \u6ce8\u91ca\u548c\u4ee3\u7801\u4e00\u8d77\u7f29\u8fdb\n\"pad-oper\", // \u64cd\u4f5c\u7b26\u4e24\u7aef\u63d2\u5165\u4e00\u4e2a\u7a7a\u683c\n\"pad-header\", //\u5728if.for,while\u7b49\u6761\u4ef6\u6216\u5faa\u73af\u8bed\u53e5\u5173\u952e\u5b57\u548c\u62ec\u53f7\u4e4b\u95f4\u63d2\u5165\u7a7a\u683c\n\"unpad-paren\", //\u5728\u5185\u90e8\u548c\u5916\u90e8\u7684\u62ec\u53f7\u5468\u56f4\u63d2\u5165\u7a7a\u683c\u3002\u5982\u6709\u53ef\u80fd\uff0c\u4efb\u4f55\u884c\u5c3e\u6ce8\u91ca\u90fd\u5c06\u4fdd\u7559\u5728\u539f\u59cb\u5217\u4e2d\n\"align-pointer=type\", // \u6307\u9488\u8d34\u8fd1\u7c7b\u578b\n\"break-one-line-headers\", //\u4ece\u540c\u4e00\u884c\u4e2d\u7684\u8bed\u53e5\u4e2d\u65ad\u5f00\u4e00\u884c\u6807\u9898\uff08\u4f8b\u5982\uff0c\u201c if\u201d\uff0c\u201c while\u201d\uff0c\u201c else\u201d\uff0c\u2026\uff09\n\"keep-one-line-blocks\",\n\"keep-one-line-statements\", // \u4ece\u540c\u4e00\u884c\u4e2d\u7684\u8bed\u53e5\u4e2d\u65ad\u5f00\u4e00\u884c\u6807\u9898\uff08\u4f8b\u5982\uff0c\u201c if\u201d\uff0c\u201c while\u201d\uff0c\u201c else\u201d\uff0c\u2026\uff09\n\"convert-tabs\", //\u5c06\u5236\u8868\u7b26\u8f6c\u6362\u4e3a\u7a7a\u683c\uff0c\u63d2\u5165\u7684\u7a7a\u683c\u6570\u5c06\u4fdd\u6301\u5236\u8868\u7b26\u7684\u95f4\u8ddd\u3002\u5f15\u53f7\u4e2d\u7684\u5236\u8868\u7b26\u4e0d\u4f1a\u88ab\u66ff\u6362\n],\n}\n</code></pre>"},{"location":"c/prepare/#_14","title":"\u4e0a\u8ff0\u529f\u80fd\u6574\u5408","text":""},{"location":"c/prepare/#_15","title":"\u4ee3\u7801\u5730\u5740","text":"<p>https://gitcode.net/u014254963/cpp-study/-/tree/master/c/ubuntu-hello-c</p>"},{"location":"c/prepare/#todo","title":"todo","text":""},{"location":"c/prepare/#cmocka","title":"CMocka","text":"<p>\u53c2\u8003\u8d44\u6599</p> <p>\u3010\u5355\u5143\u6d4b\u8bd5\u3011CMocka\u5355\u5143\u6d4b\u8bd5\u6846\u67b6\uff08\u652f\u6301mock\u529f\u80fd\uff09</p>"},{"location":"c/prepare/#clang-format","title":"clang-format","text":"<p>\u53c2\u8003\u8d44\u6599 Clang-format \u914d\u7f6e\u6587\u4ef6\u6307\u5357</p> <p>\u4f7f\u7528 clang-format \u8fdb\u884c C++ \u4ee3\u7801\u98ce\u683c\u7ba1\u7406</p>"},{"location":"c/c_and_pointer/","title":"Index","text":""},{"location":"c/c_and_pointer/#_1","title":"\u6e90\u7801","text":"<p>Pointers on C - C \u548c\u6307\u9488 - \u4e66\u4e2d\u6e90\u4ee3\u7801</p> <p>Kenneth A. Reek</p> <p>https://www.cs.rit.edu/~kar/index.html</p> <p>Pointers on C</p> <p>https://www.cs.rit.edu/~kar/pointers.on.c/index.html</p> <ol> <li>Downloads</li> </ol> <p>The numbered programs contained in the book are available in an archive that is organized by chapter.</p> <p>Unix version (a compressed tar archive)</p> <p>https://www.cs.rit.edu/~kar/pointers.on.c/programs.tar.Z</p> <p>PC version (a ZIP file)</p> <p>https://www.cs.rit.edu/~kar/pointers.on.c/programs.zip</p> <ol> <li>Errata for Pointers on C</li> </ol> <p>https://www.cs.rit.edu/~kar/pointers.on.c/errata.html</p> <p>References</p> <p>Pointers on C - C \u548c\u6307\u9488 https://www.cs.rit.edu/~kar/pointers.on.c/index.html</p>"},{"location":"c/c_and_pointer/simple_program/","title":"\u4e00\u4e2a\u7b80\u5355\u7a0b\u5e8f","text":""},{"location":"c/c_and_pointer/simple_program/#_1","title":"\u7b2c\u4e00\u4e2a\u7a0b\u5e8f","text":""},{"location":"c/c_and_pointer/simple_program/#_2","title":"\u6e90\u7801","text":"main.c<pre><code>/*\n** This program reads input lines from the standard input and prints\n** each input line, followed by just some portions of the lines, to\n** the standard output.\n**\n** The first input is a list of column numbers, which ends with a\n** negative number.  The column numbers are paired and specify\n** ranges of columns from the input line that are to be printed.\n** For example, 0 3 10 12 -1 indicates that only columns 0 through 3\n** and columns 10 through 12 will be printed.\n*/\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#define MAX_COLS    20  /* max # of columns to process */\n#define MAX_INPUT   1000    /* max len of input &amp; output lines */\nint read_column_numbers(int columns[], int max);\nvoid    rearrange(char* output, char const* input,\nint n_columns, int const columns[]);\nint\nmain(void) {\nint n_columns;      /* # of columns to process */\nint columns[MAX_COLS];  /* the columns to process */\nchar    input[MAX_INPUT];   /* array for input line */\nchar    output[MAX_INPUT];  /* array for output line */\n/*\n    ** Read the list of column numbers\n    */\nn_columns = read_column_numbers(columns, MAX_COLS);\n/*\n    ** Read, process and print the remaining lines of input.\n    */\nwhile (gets(input) != NULL) {\nprintf(\"Original input : %s\\n\", input);\nrearrange(output, input, n_columns, columns);\nprintf(\"Rearranged line: %s\\n\", output);\n}\nreturn EXIT_SUCCESS;\n}\n/*\n** Read the list of column numbers, ignoring any beyond the specified\n** maximum.\n*/\nint\nread_column_numbers(int columns[], int max) {\nint num = 0;\nint ch;\n/*\n    ** Get the numbers, stopping at eof or when a number is &lt; 0.\n    */\nwhile (num &lt; max &amp;&amp; scanf(\"%d\", &amp;columns[num]) == 1\n&amp;&amp; columns[num] &gt;= 0)\nnum += 1;\n/*\n    ** Make sure we have an even number of inputs, as they are\n    ** supposed to be paired.\n    */\nif (num % 2 != 0) {\nputs(\"Last column number is not paired.\");\nexit(EXIT_FAILURE);\n}\n/*\n    ** Discard the rest of the line that contained the final\n    ** number.\n    */\nwhile ((ch = getchar()) != EOF &amp;&amp; ch != '\\n')\n;\nreturn num;\n}\n/*\n** Process a line of input by concatenating the characters from\n** the indicated columns.  The output line is then NUL terminated.\n*/\nvoid\nrearrange(char* output, char const* input,\nint n_columns, int const columns[]) {\nint col;        /* subscript for columns array */\nint output_col; /* output column counter */\nint len;        /* length of input line */\nlen = strlen(input);\noutput_col = 0;\n/*\n    ** Process each pair of column numbers.\n    */\nfor (col = 0; col &lt; n_columns; col += 2) {\nint nchars = columns[col + 1] - columns[col] + 1;\n/*\n        ** If the input line isn't this long or the output\n        ** array is full, we're done.\n        */\nif (columns[col] &gt;= len ||\noutput_col == MAX_INPUT - 1)\nbreak;\n/*\n        ** If there isn't room in the output array, only copy\n        ** what will fit.\n        */\nif (output_col + nchars &gt; MAX_INPUT - 1)\nnchars = MAX_INPUT - output_col - 1;\n/*\n        ** Copy the relevant data.\n        */\nstrncpy(output + output_col, input + columns[col],\nnchars);\noutput_col += nchars;\n}\noutput[output_col] = '\\0';\n}\n</code></pre>"},{"location":"c/c_and_pointer/simple_program/#_3","title":"\u6784\u5efa\u811a\u672c","text":"CMakeLists.txtrun.sh <pre><code>cmake_minimum_required(VERSION 3.25)\nproject(helloc C)\nset(CMAKE_C_STANDARD 17)\nset(CMAKE_C_STANDARD_REQUIRED True)\nset(CMAKE_C_EXTENSIONS OFF)\nSET(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -fprofile-arcs -ftest-coverage\")\ninclude_directories(${CMAKE_SOURCE_DIR})\naux_source_directory(. SRCS)\nset(EXECUTABLE_OUTPUT_PATH ${CMAKE_BINARY_DIR}/bin)\nadd_executable(${PROJECT_NAME} ${SRCS})\n</code></pre> <pre><code>#!/bin/bash\nif [ -d build ]; then\nrm -r build\nfi\ncmake -S . -B build &amp;&amp; cmake --build build\n\n./build/bin/helloc\n</code></pre>"},{"location":"c/c_and_pointer/simple_program/#_4","title":"\u8fd0\u884c\u6548\u679c","text":"<pre><code>laolang@laolang-pc:~/tmp$ l\n\u603b\u8ba1 16K\n-rw-rw-r-- 1 laolang laolang  398 2023-06-02 07:55:51 CMakeLists.txt\n-rwxrwxr-x 1 laolang laolang   85 2023-06-02 07:58:43 format.sh*\n-rw-rw-r-- 1 laolang laolang 3.4K 2023-06-02 07:58:46 main.c\n-rwxrwxr-x 1 laolang laolang  142 2023-06-02 08:06:46 run.sh*\nlaolang@laolang-pc:~/tmp$ ./run.sh -- The C compiler identification is GNU 11.3.0\n-- Detecting C compiler ABI info\n-- Detecting C compiler ABI info - done\n-- Check for working C compiler: /usr/bin/cc - skipped\n-- Detecting C compile features\n-- Detecting C compile features - done\n-- Configuring done (0.2s)\n-- Generating done (0.0s)\n-- Build files have been written to: /home/laolang/tmp/build\n[ 50%] Building C object CMakeFiles/helloc.dir/main.c.o\n/home/laolang/tmp/main.c: In function \u2018main\u2019:\n/home/laolang/tmp/main.c:38:12: warning: implicit declaration of function \u2018gets\u2019; did you mean \u2018fgets\u2019? [-Wimplicit-function-declaration]\n38 |     while (gets(input) != NULL) {\n|            ^~~~\n      |            fgets\n/home/laolang/tmp/main.c:38:24: warning: comparison between pointer and integer\n   38 |     while (gets(input) != NULL) {\n|                        ^~\n[100%] Linking C executable bin/helloc\n/usr/bin/ld: CMakeFiles/helloc.dir/main.c.o: in function `main':\nmain.c:(.text+0xa9): \u8b66\u544a\uff1a the `gets' function is dangerous and should not be used.\n[100%] Built target helloc\n4 9 12 20 -1\nabcdefghijklmnopqrstuvwxyz\nOriginal input : abcdefghijklmnopqrstuvwxyz\nRearranged line: efghijmnopqrstu\nHello there, how are you?\nOriginal input : Hello there, how are you?\nRearranged line: o ther how are I am fine, thanks.\nOriginal input : I am fine, thanks.\nRearranged line:  fine,hanks.\nSee you!\nOriginal input : See you!\nRearranged line: you!\nBye\nOriginal input : Bye\nRearranged line: -1\nOriginal input : -1\nRearranged line: ^C\nlaolang@laolang-pc:~/tmp$ </code></pre>"},{"location":"c/c_and_pointer/simple_program/#_5","title":"\u4fee\u6b63","text":"<p>\u6dfb\u52a0\u4e24\u4e2a\u6587\u4ef6</p> global.hglobal.c <pre><code>#ifndef _GLOBAL_H_\n#define _GLOBAL_H_\n/* max # of columns to process */\nextern const int MAX_COLS;\n/* max len of input &amp; output lines */\nextern const int MAX_INPUT;\n#endif\n</code></pre> <pre><code>#include \"global.h\"\nconst int MAX_COLS = 20;\nconst int MAX_INPUT = 1000;\n</code></pre> <p><code>main.c</code> \u4fee\u6539\u5982\u4e0b</p> <ol> <li>\u5c06 <code>#define</code> \u5b8f\u5b9a\u4e49\u6539\u4e3a\u5168\u5c40\u5e38\u91cf</li> <li>\u4f7f\u7528 <code>fgets</code> \u66ff\u4ee3 <code>gets</code></li> </ol> <p></p>"},{"location":"cmake/hello/","title":"Hello World","text":""},{"location":"cmake/hello/#cmake","title":"\u4e00\u4e2a\u6700\u57fa\u672c\u7684 cmake \u7a0b\u5e8f","text":"<p>https://gitcode.net/u014254963/cpp-study/-/tree/master/cmake-demos/hello_01</p>"},{"location":"cmake/hello/#_1","title":"\u76ee\u5f55\u7ed3\u6784","text":"<pre><code>laolang@laolang-pc:~/gitcode/cpp-study/cmake-demos/hello_01$ l\n\u603b\u8ba1 8.0K\n-rw-rw-r-- 1 laolang laolang 158 2023-05-28 11:03:24 CMakeLists.txt\n-rw-rw-r-- 1 laolang laolang  82 2023-05-28 11:03:32 main.cpp\nlaolang@laolang-pc:~/gitcode/cpp-study/cmake-demos/hello_01$ </code></pre>"},{"location":"cmake/hello/#c","title":"c++","text":"main.cpp<pre><code>#include &lt;iostream&gt;\nint main(){\nstd::cout &lt;&lt; \"hello world\" &lt;&lt; std::endl;\nreturn 0;\n}\n</code></pre>"},{"location":"cmake/hello/#cmakeliststxt","title":"CMakeLists.txt","text":"CMakeLists.txt<pre><code>cmake_minimum_required(VERSION 3.25)\n# \u6307\u5b9a c++ \u7248\u672c\u4e3a 14\nset(CMAKE_CXX_STANDARD 14)\n# \u5982\u679c\u7f16\u8bd1\u5668\u4e0d\u652f\u6301\u6307\u5b9a\u7684\u7248\u672c, \u5219\u7ec8\u6b62\u6784\u5efa\u800c\u4e0d\u662f\u4e0b\u8c03\u7248\u672c\nset(CMAKE_CXX_STANDARD_REQUIRED ON)\n# \u4ec5\u4f7f\u7528\u6807\u51c6c++\u7684\u7f16\u8bd1\u5668\u9009\u9879\nset(CMAKE_CXX_EXTENSIONS OFF)\nproject(cpp-hello CXX)\nadd_executable(${PROJECT_NAME} main.cpp)\n</code></pre>"},{"location":"cmake/hello/#_2","title":"\u8fd0\u884c","text":"<p>\u901a\u5e38\u6765\u8bf4, \u4e00\u4e2a <code>cmake</code> \u7684\u8fd0\u884c\u8fc7\u7a0b\u5982\u4e0b <pre><code># \u521b\u5efa\u6784\u5efa\u76ee\u5f55\nmd build\n# \u8fdb\u5165\u6784\u5efa\u76ee\u5f55\ncd build\n# \u521b\u5efa mingw \u7684 makefile\ncmake .. -G \"MinGW Makefiles\"\n# \u751f\u6210\u53ef\u6267\u884c\u7a0b\u5e8f\nmake\n# \u8fd0\u884c\nhello_cmake.exe\n</code></pre></p> <p>\u73b0\u5728\u53ef\u4ee5\u4e00\u6761\u547d\u4ee4\u641e\u5b9a <pre><code>cmake -S . -B build &amp;&amp; cmake --build build\n</code></pre> \u6b64\u65f6\u5df2\u7ecf\u5b8c\u6210\u4e86\u6784\u5efa,<code>./build/cpp-hello</code> \u5373\u53ef\u8fd0\u884c\u7a0b\u5e8f</p> <p>\u67e5\u770b\u6240\u6709\u6784\u5efa\u76ee\u6807</p> <p>cmake --build build --target help \u53ef\u4ee5\u67e5\u770b\u6240\u6709\u7684\u6784\u5efa\u76ee\u6807</p>"},{"location":"cmake/hello/#_3","title":"\u591a\u4e2a\u6587\u4ef6","text":"<p>https://gitcode.net/u014254963/cpp-study/-/tree/master/cmake-demos/hello_02</p> <p>\u591a\u4e2a\u6587\u4ef6\u7684\u65f6\u5019\u53ea\u9700\u8981\u4fee\u6539\u4e09\u884c\u4ee3\u7801</p>"},{"location":"cmake/hello/#_4","title":"\u76ee\u5f55\u7ed3\u6784","text":"<pre><code>laolang@laolang-pc:~/gitcode/cpp-study/cmake-demos/hello_02$ l\n\u603b\u8ba1 16K\n-rw-rw-r-- 1 laolang laolang 423 2023-05-28 11:48:42 CMakeLists.txt\n-rw-rw-r-- 1 laolang laolang 185 2023-05-28 11:45:42 main.cpp\n-rw-rw-r-- 1 laolang laolang 124 2023-05-28 11:45:04 person.cpp\n-rw-rw-r-- 1 laolang laolang 148 2023-05-28 11:43:28 person.h\nlaolang@laolang-pc:~/gitcode/cpp-study/cmake-demos/hello_02$ </code></pre>"},{"location":"cmake/hello/#c_1","title":"c++","text":"main.cppperson.hperson.cpp <pre><code>#include &lt;iostream&gt;\n#include &lt;memory&gt;\n#include \"person.h\"\nint main(){\nauto person = std::make_unique&lt;Person&gt;();\nstd::cout &lt;&lt; person-&gt;sayHello() &lt;&lt; std::endl;\nreturn 0;\n}\n</code></pre> <pre><code>#ifndef _PERSON_H_\n#define _PERSON_H_\n#include &lt;string&gt;\nclass Person\n{\npublic:\nPerson();\n~Person();\nstd::string sayHello();\n};\n#endif\n</code></pre> <pre><code>#include \"person.h\"\nPerson::Person()\n{\n}\nPerson::~Person()\n{\n}\nstd::string Person::sayHello()\n{\nreturn \"hello world\";\n}\n</code></pre>"},{"location":"cmake/hello/#cmakelists","title":"CMakeLists","text":"CMakeLists.txt<pre><code>cmake_minimum_required(VERSION 3.25)\n# \u6307\u5b9a c++ \u7248\u672c\u4e3a 14\nset(CMAKE_CXX_STANDARD 14)\n# \u5982\u679c\u7f16\u8bd1\u5668\u4e0d\u652f\u6301\u6307\u5b9a\u7684\u7248\u672c, \u5219\u7ec8\u6b62\u6784\u5efa\u800c\u4e0d\u662f\u4e0b\u8c03\u7248\u672c\nset(CMAKE_CXX_STANDARD_REQUIRED ON)\n# \u4ec5\u4f7f\u7528\u6807\u51c6c++\u7684\u7f16\u8bd1\u5668\u9009\u9879\nset(CMAKE_CXX_EXTENSIONS OFF)\n# \u6dfb\u52a0\u5934\u6587\u4ef6\u76ee\u5f55\ninclude_directories(${PROJECT_SOURCE_DIR}/include # (1)!\nproject(cpp-hello CXX)\n# \u6536\u96c6\u6307\u5b9a\u76ee\u5f55\u4e2d\u6240\u6709\u6e90\u6587\u4ef6\u540d\u79f0\naux_source_directory(. SRCS) # (2)!\n# \u4f7f\u7528\u6307\u5b9a\u7684\u6e90\u6587\u4ef6\u5217\u8868\u6784\u5efa\u53ef\u6267\u884c\u7a0b\u5e8f\nadd_executable(${PROJECT_NAME} ${SRCS}) # (3)!\n</code></pre> <ol> <li> <p>\u6dfb\u52a0\u5934\u6587\u4ef6\u76ee\u5f55</p> </li> <li> <p>\u6536\u96c6\u6307\u5b9a\u76ee\u5f55\u4e2d\u6240\u6709\u6e90\u6587\u4ef6\u540d\u79f0</p> </li> <li> <p>\u4f7f\u7528\u6307\u5b9a\u7684\u6e90\u6587\u4ef6\u5217\u8868\u6784\u5efa\u53ef\u6267\u884c\u7a0b\u5e8f</p> </li> </ol> <p>\u6ce8\u610f aux_source_directory \u7684\u526f\u4f5c\u7528</p> <p>\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u751f\u6210\u7684\u6784\u5efa\u7cfb\u7edf\u80fd\u591f\u611f\u77e5\u5b83\u4f55\u65f6\u9700\u8981\u91cd\u65b0\u8fd0\u884cCMake\uff0c\u56e0\u4e3a\u9700\u8981\u4fee\u6539CMakeLists.txt\u6765\u5f15\u5165\u4e00\u4e2a\u65b0\u7684\u6e90\u6587\u4ef6\u3002\u5f53\u6e90\u6587\u4ef6\u4ec5\u4ec5\u662f\u52a0\u5230\u4e86\u8be5\u8def\u5f84\u4e0b\uff0c\u4f46\u662f\u6ca1\u6709\u4fee\u6539\u8fd9\u4e2aCMakeLists.txt\u6587\u4ef6\uff0c\u4f7f\u7528\u8005\u53ea\u80fd\u624b\u52a8\u91cd\u65b0\u8fd0\u884cCMake\u6765\u4ea7\u751f\u4e00\u4e2a\u5305\u542b\u8fd9\u4e2a\u65b0\u6587\u4ef6\u7684\u6784\u5efa\u7cfb\u7edf\u3002</p> <p>\u6ce8\u610f include_directories \u7684\u526f\u4f5c\u7528</p> <p>include_directories \u4f1a\u5f71\u54cd\u4e4b\u540e\u6240\u6709 CMakeLists.txt,\u6bd4\u5982\u5b50\u76ee\u5f55\u7684CMakeLists.txt \u4e5f\u4f1a\u6dfb\u52a0\u6307\u5b9a\u7684\u5934\u6587\u4ef6\u76ee\u5f55. \u4e00\u822c\u653e\u5728\u6700\u5916\u56f4, \u6307\u5b9a\u7279\u5b9a\u76ee\u6807\u7684\u5934\u6587\u4ef6\u76ee\u5f55\u5e94\u8be5\u4f7f\u7528 <code>target_include_directories</code>\u3002</p>"},{"location":"cmake/multi-directory-and-dynamic-libraries/","title":"\u591a\u76ee\u5f55\u4ee5\u53ca\u751f\u6210\u52a8\u6001\u5e93","text":""},{"location":"cmake/multi-directory-and-dynamic-libraries/#_1","title":"\u76ee\u5f55\u7ed3\u6784","text":"<pre><code>laolang@laolang-pc:~/gitcode/cpp-study/cmake-demos/hello_03$ tree\n.\n\u251c\u2500\u2500 CMakeLists.txt\n\u251c\u2500\u2500 include\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 calc\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 calc.h\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 div.h\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 sum.h\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 xmlparser\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 document.h\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 node.h\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 xmlparser.h\n\u2514\u2500\u2500 src\n    \u251c\u2500\u2500 calc\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 CMakeLists.txt\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 div.cpp\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 sum.cpp\n    \u251c\u2500\u2500 CMakeLists.txt\n    \u251c\u2500\u2500 main\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 CMakeLists.txt\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 main.cpp\n    \u2514\u2500\u2500 xmlparser\n        \u251c\u2500\u2500 CMakeLists.txt\n        \u251c\u2500\u2500 document.cpp\n        \u2514\u2500\u2500 node.cpp\n\n7 directories, 16 files\nlaolang@laolang-pc:~/gitcode/cpp-study/cmake-demos/hello_03$ </code></pre>"},{"location":"cmake/multi-directory-and-dynamic-libraries/#cmakeliststxt","title":"CMakeLists.txt","text":""},{"location":"cmake/multi-directory-and-dynamic-libraries/#cmakeliststxt_1","title":"\u9876\u5c42 CMakeLists.txt","text":"<pre><code>cmake_minimum_required(VERSION 3.0)\nproject(cpp-hello CXX)\nset(CMAKE_CXX_STANDARD 14)\nset(CMAKE_CXX_STANDARD_REQUIRED True)\nset(CMAKE_CXX_EXTENSIONS OFF)\nset(CMAKE_BUILD_WITH_INSTALL_RPATH True)\nset(lib_calc calc)\nset(lib_xmlparser xmlparser)\nadd_subdirectory(src)\n</code></pre>"},{"location":"cmake/multi-directory-and-dynamic-libraries/#srccmakeliststxt","title":"src/CMakeLists.txt","text":"<pre><code>add_subdirectory(main)\nadd_subdirectory(calc)\nadd_subdirectory(xmlparser)\n</code></pre>"},{"location":"cmake/multi-directory-and-dynamic-libraries/#srccalcxmlparsercmakeliststxt","title":"src/[calc,xmlparser]/CMakeLists.txt","text":"src/calc/CMakeLists.txtsrc/xmlparser/CMakeLists.txt <pre><code>set(LIBRARY_OUTPUT_PATH ${CMAKE_BINARY_DIR}/lib)\naux_source_directory(. CALC_SRCS)\nadd_library(${lib_calc} SHARED ${CALC_SRCS})\ntarget_include_directories(${lib_calc} PUBLIC ${PROJECT_SOURCE_DIR}/include)\ntarget_link_libraries(${lib_calc} ${lib_util})\nset_target_properties(${lib_calc} PROPERTIES VERSION 1.0 SOVERSION 1)\n</code></pre> <pre><code>set(LIBRARY_OUTPUT_PATH ${CMAKE_BINARY_DIR}/lib)\naux_source_directory(. XML_PARSER_SRCS)\nadd_library(${lib_xmlparser} SHARED ${XML_PARSER_SRCS})\ntarget_include_directories(${lib_xmlparser} PUBLIC ${PROJECT_SOURCE_DIR}/include)\ntarget_link_libraries(${lib_xmlparser} ${lib_util})\nset_target_properties(${lib_xmlparser} PROPERTIES VERSION 1.0 SOVERSION 1)\n</code></pre>"},{"location":"cmake/multi-directory-and-dynamic-libraries/#srcmaincmakeliststxt","title":"src/main/CMakeLists.txt","text":"<pre><code>set(EXECUTABLE_OUTPUT_PATH ${CMAKE_BINARY_DIR}/bin)\naux_source_directory(. SRCS)\nadd_executable(${PROJECT_NAME} ${SRCS})\ntarget_include_directories(${PROJECT_NAME} PRIVATE ${PROJECT_SOURCE_DIR}/include)\ntarget_link_libraries(${PROJECT_NAME} ${lib_util} ${lib_calc} ${lib_xmlparser})\nset_target_properties(${PROJECT_NAME} PROPERTIES INSTALL_RPATH \"\\${ORIGIN}/../lib\")\n</code></pre>"},{"location":"cmake/multi-directory-and-dynamic-libraries/#_2","title":"\u6e90\u7801","text":""},{"location":"cmake/multi-directory-and-dynamic-libraries/#calc","title":"calc","text":"include/calc/calc.hinclude/calc/sum.hsrc/calc/sum.cpp <pre><code>#include \"calc/div.h\"\n#include \"calc/sum.h\"\n</code></pre> <pre><code>#ifndef _CALC_SUM_H_\n#define _CALC_SUM_H_\nclass Sum{\npublic:\nSum();\nint add(int x, int y);\n};\n#endif\n</code></pre> <pre><code>#include \"calc/sum.h\"\nSum::Sum()\n{\n}\nint Sum::add(int x, int y)\n{\nreturn x + y;\n}\n</code></pre>"},{"location":"cmake/multi-directory-and-dynamic-libraries/#xmlparser","title":"xmlparser","text":"<p>\u4e0e calc \u5e76\u65e0\u592a\u5927\u533a\u522b</p>"},{"location":"cmake/multi-directory-and-dynamic-libraries/#main","title":"main","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;memory&gt;\n#include \"calc/calc.h\"\n#include \"xmlparser/xmlparser.h\"\nint main(){\nauto calc_sum = std::make_unique&lt;Sum&gt;();\nstd::cout &lt;&lt; calc_sum-&gt;add(1,2) &lt;&lt; std::endl;\nauto xmlparser_document = std::make_unique&lt;Document&gt;();\nstd::cout &lt;&lt; xmlparser_document-&gt;parse() &lt;&lt; std::endl;\nstd::cout &lt;&lt; \"hello world\" &lt;&lt; std::endl;\nstd::cout &lt;&lt; std::endl &lt;&lt; \"------------------\" &lt;&lt; std::endl;\nreturn 0;\n}\n</code></pre>"},{"location":"cmake/multi-directory-and-dynamic-libraries/#_3","title":"\u91cd\u70b9","text":""},{"location":"cmake/multi-directory-and-dynamic-libraries/#rpath","title":"rpath","text":"<p><code>set(CMAKE_BUILD_WITH_INSTALL_RPATH True)</code> 1</p> <p><code>set_target_properties(${PROJECT_NAME} PROPERTIES INSTALL_RPATH \"\\${ORIGIN}/../lib\")</code> 1</p> <p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e2aPATH\u5728\u6784\u5efa\u4ea7\u751f\u7684\u4e2d\u95f4\u6587\u4ef6\uff0c\u662f\u4e0d\u589e\u52a0\u7684\uff1b\u800c\u662f\u53ea\u5bf9\u5b89\u88c5\u7684\u76ee\u6807\u6709\u6548\u3002\u5982\u679c\u4f60\u60f3\u9488\u5bf9\u6784\u5efa\u7684\u4e2d\u95f4\u6587\u4ef6\u4e5f\u6709\u6548\u679c\uff0c\u53ef\u4ee5\u52a0\u4e0a\u6b64\u914d\u7f6e</p> <pre><code>laolang@laolang-pc:~/gitcode/cpp-study/cmake-demos/hello_03$ ldd build_release/bin/cpp-hello linux-vdso.so.1 (0x00007ffda47f7000)\nlibcalc.so.1 =&gt; /home/laolang/gitcode/cpp-study/cmake-demos/hello_03/build_release/bin/../lib/libcalc.so.1 (0x00007f9d41e8b000)\nlibxmlparser.so.1 =&gt; /home/laolang/gitcode/cpp-study/cmake-demos/hello_03/build_release/bin/../lib/libxmlparser.so.1 (0x00007f9d41e86000)\nlibstdc++.so.6 =&gt; /lib/x86_64-linux-gnu/libstdc++.so.6 (0x00007f9d41c00000)\nlibgcc_s.so.1 =&gt; /lib/x86_64-linux-gnu/libgcc_s.so.1 (0x00007f9d41e53000)\nlibc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007f9d41800000)\nlibm.so.6 =&gt; /lib/x86_64-linux-gnu/libm.so.6 (0x00007f9d41b19000)\n/lib64/ld-linux-x86-64.so.2 (0x00007f9d41e97000)\nlaolang@laolang-pc:~/gitcode/cpp-study/cmake-demos/hello_03$ </code></pre> <p>Note</p> <p>\u6b64\u914d\u7f6e\u6700\u5927\u7684\u4f5c\u7528\u5176\u5b9e\u662f\u5236\u4f5c\u7eff\u8272\u8f6f\u4ef6</p>"},{"location":"cmake/multi-directory-and-dynamic-libraries/#_4","title":"\u751f\u6210\u8def\u5f84","text":"<ol> <li><code>set(EXECUTABLE_OUTPUT_PATH ${CMAKE_BINARY_DIR}/bin)</code></li> <li><code>set(LIBRARY_OUTPUT_PATH ${CMAKE_BINARY_DIR}/lib)</code></li> </ol> <p>bin \u8def\u5f84\u4e0elib\u7684\u76f8\u5bf9\u8def\u5f84\u9700\u8981\u4e0erpath\u7684\u914d\u7f6e\u76f8\u5bf9\u5e94</p>"},{"location":"cmake/multi-directory-and-dynamic-libraries/#link","title":"link \u8def\u5f84","text":"<p><code>target_include_directories(XXX PRIVATE ${PROJECT_SOURCE_DIR}/include)</code></p> <p>\u53c2\u8003 2</p> <p>target_include_directories\u91cc\u9762\u7684\u5173\u952e\u5b57\u63a7\u5236\u5934\u6587\u4ef6\u76ee\u5f55\u4f20\u9012</p> <p>target_link_libraries\u91cc\u7684\u5173\u952e\u5b57\u63a7\u5236\u5934\u6587\u4ef6\u76ee\u5f55\u4ee5\u53ca\u94fe\u63a5\u5e93\u4f20\u9012</p> <p>Note</p> <p>PUBLIC:\u5bf9\u5185\u5bf9\u5916\u90fd\u516c\u5f00\uff0c\u53ef\u5c06\u5934\u6587\u4ef6\u76ee\u5f55\u4ee5\u53ca\u94fe\u63a5\u5e93\u4f20\u9012\u7ed9\u8fde\u63a5\u8005</p> <p>PRIVATE:\u5bf9\u5185\u516c\u5f00\uff0c\u5bf9\u5916\u4e0d\u516c\u5f00\uff0c\u4e0d\u53ef\u4f20\u9012\u5934\u6587\u4ef6\u76ee\u5f55\u4ee5\u53ca\u94fe\u63a5\u5e93</p> <p>INTERFACE:\u5bf9\u5916\u516c\u5f00\uff0c\u5bf9\u5185\u4e0d\u516c\u5f00\uff0c\u53ef\u4f20\u9012\u5934\u6587\u4ef6\u76ee\u5f55\u4ee5\u53ca\u94fe\u63a5\u5e93\uff0c\u4f46\u5185\u90e8\u4e0d\u53ef\u4f7f\u7528\u5934\u6587\u4ef6\u53ca\u8fde\u63a5\u5e93\uff0c\u53ea\u80fd\u63a5\u53e3\u4f20\u9012</p> <ol> <li> <p>https://blog.csdn.net/z296671124/article/details/86699720 \u21a9\u21a9</p> </li> <li> <p>https://blog.csdn.net/weixin_43862847/article/details/119762230 \u21a9</p> </li> </ol>"},{"location":"cpp/","title":"Index","text":"<p>C++ API \u4e2d\u6587\u53c2\u8003\u624b\u518c</p>"},{"location":"cpp/base/","title":"\u57fa\u64cd","text":""},{"location":"cpp/base/#_1","title":"\u53c2\u8003","text":"<p>C++\u6587\u4ef6\u8bfb\u5199\u8be6\u89e3\uff08ofstream,ifstream,fstream\uff09 c++\u8f93\u5165\u6587\u4ef6\u6d41ifstream\u7528\u6cd5\u8be6\u89e3</p> \u6a21\u5f0f \u542b\u4e49 ios::in \u4e3a\u8f93\u5165(\u8bfb)\u800c\u6253\u5f00\u6587\u4ef6 ios::out \u4e3a\u8f93\u51fa(\u5199)\u800c\u6253\u5f00\u6587\u4ef6 ios::ate \u521d\u59cb\u4f4d\u7f6e\uff1a\u6587\u4ef6\u5c3e ios::app \u6240\u6709\u8f93\u51fa\u9644\u52a0\u5728\u6587\u4ef6\u672b\u5c3e ios::trunc \u5982\u679c\u6587\u4ef6\u5df2\u5b58\u5728\u5219\u5148\u5220\u9664\u8be5\u6587\u4ef6 ios::binary \u4e8c\u8fdb\u5236\u65b9\u5f0f"},{"location":"cpp/base/#_2","title":"\u6587\u672c\u6587\u4ef6\u8bfb\u5199","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;vector&gt;\n/**\n * @brief \u9010\u884c\u8bfb\u53d6\u6587\u672c\u6587\u4ef6\n *\n * @param filename \u6587\u4ef6\u540d\n * @return std::vector&lt;std::string&gt; \u6587\u4ef6\u5185\u5bb9\u4fdd\u5b58\u5230 vector\n */\nstatic std::vector&lt;std::string&gt; readTxtFile(std::string filename) {\nstd::vector&lt;std::string&gt; content;\nstd::string line;\nstd::ifstream file;\nfile.open(filename, std::ios::in);\nif (!file)\n{\nstd::cout &lt;&lt; \"\u6587\u4ef6\u6253\u5f00\u5931\u8d25\" &lt;&lt; std::endl;\nreturn content;\n}\nwhile (!file.eof())\n{\nstd::getline(file, line);\ncontent.push_back(line);\n}\nfile.close();\nreturn content;\n}\n/**\n * @brief \u5199\u5165\u6587\u672c\u6587\u4ef6\n *\n * @param filename \u6587\u4ef6\u540d\n * @param content \u6587\u4ef6\u5185\u5bb9\n */\nstatic void writeTxtFile(std::string filename, std::vector&lt;std::string&gt; content) {\nstd::ofstream out;\nout.open(filename, std::ios::out);\nif (!out.is_open())\n{\nstd::cout &lt;&lt; \"\u6587\u4ef6\u6253\u5f00\u5931\u8d25\" &lt;&lt; std::endl;\nreturn ;\n}\nif (content.size() &lt;= 0) {\nreturn ;\n}\nfor (auto line : content)\n{\nout &lt;&lt; line &lt;&lt; std::endl;\n}\nout.close();\n}\nint main() {\nauto content = readTxtFile(\"./main.cpp\");\nfor (auto line : content)\n{\nstd::cout &lt;&lt; line &lt;&lt; std::endl;\n}\nwriteTxtFile(\"test.txt\", content);\nstd::cout &lt;&lt; std::endl &lt;&lt; \"Hello World!\" &lt;&lt; std::endl;\nreturn 0;\n}\n</code></pre>"},{"location":"fltk/draw-something/","title":"\u7ed8\u56fe","text":""},{"location":"fltk/draw-something/#_1","title":"\u7a97\u53e3\u5c45\u4e2d\u5e76\u753b\u4e00\u6761\u7ebf","text":""},{"location":"fltk/draw-something/#_2","title":"\u4ee3\u7801","text":"main.cpp<pre><code>// generated by Fast Light User Interface Designer (fluid) version 1.0308\n#include &lt;iostream&gt;\n#include &lt;FL/Fl.H&gt;\n#include &lt;FL/Fl_Double_Window.H&gt;\n#include &lt;FL/fl_draw.H&gt;\n/**\n * \u81ea\u5b9a\u4e49\u4e00\u4e2a\u7a97\u53e3\n */\nclass Win : public Fl_Double_Window\n{\npublic:\nWin(int x, int y, int w, int h, const char *label = 0) : Fl_Double_Window(x, y, w, h, label)\n{\ninit();\n}\nWin(int w, int h, const char *label = 0) : Fl_Double_Window(w, h, label)\n{\ninit();\n}\nvoid init()\n{\n// \u80cc\u666f\u8272\u4e3a\u767d\u8272\ncolor(FL_WHITE);\n// \u65e0\u8fb9\u6846\nbox(FL_FLAT_BOX);\n}\n/**\n     * \u91cd\u5199 draw \u51fd\u6570\n     */\nvirtual void draw()\n{\n// \u8c03\u7528\u7236\u7c7b draw \u51fd\u6570\nFl_Double_Window::draw();\n// \u7ed8\u5236\u4e00\u6761\u9ed1\u8272\u7684\u7ebf\nfl_color(FL_BLACK);\nfl_line(10, 10, 50, 50);\n}\n};\n/**\n * \u7a97\u53e3\u5c45\u4e2d\u663e\u793a\n */\nstatic void make_window_center(Fl_Double_Window *win)\n{\n// \u83b7\u53d6\u5c4f\u5e55\u5bec\u9ad8\nint screen_w = Fl::w();\nint screen_h = Fl::h();\n// \u7a97\u53e3\u5bec\u9ad8\nint win_w = win-&gt;w();\nint win_h = win-&gt;h();\n// \u8ba1\u7b97\u4f4d\u7f6e\nint x = (screen_w - win_w) / 2;\nint y = (screen_h - win_h) / 2;\n// \u8bbe\u7f6e\u4f4d\u7f6e\nwin-&gt;position(x, y);\n}\nint main(int argc, char **argv)\n{\nFl_Double_Window *w;\nWin *win = new Win(366, 261, \"FLTK - \u7ed8\u56fe\");\nw = win;\nwin-&gt;end();\nwin-&gt;resizable(win);\n// \u7a97\u53e3\u5c45\u4e2d\nmake_window_center(w);\nw-&gt;show(argc, argv);\nreturn Fl::run();\n}\n</code></pre>"},{"location":"fltk/draw-something/#_3","title":"\u6548\u679c","text":""},{"location":"fltk/hello-world-cmake/","title":"hello-world-cmake.md","text":""},{"location":"fltk/hello-world-cmake/#_1","title":"\u4ee3\u7801\u4ed3\u5e93","text":"<p>https://gitcode.net/u014254963/cpp-study/-/tree/master/fltk-demos/hello-world-cmake</p>"},{"location":"fltk/hello-world-cmake/#_2","title":"\u76ee\u5f55\u7ed3\u6784","text":"<pre><code>laolang@laolang-pc:~/gitcode/cpp-study/fltk-demos/hello-world-cmake$ tree\n.\n\u251c\u2500\u2500 CMakeLists.txt\n\u251c\u2500\u2500 include\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 xmlparser\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 document.h\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 node.h\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 xmlparser.h\n\u251c\u2500\u2500 scripts\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 copy_fltk_lib.py\n\u2514\u2500\u2500 src\n    \u251c\u2500\u2500 CMakeLists.txt\n    \u251c\u2500\u2500 main\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 CMakeLists.txt\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 main.cpp\n    \u2514\u2500\u2500 xmlparser\n        \u251c\u2500\u2500 CMakeLists.txt\n        \u251c\u2500\u2500 document.cpp\n        \u2514\u2500\u2500 node.cpp\n\n6 directories, 11 files\nlaolang@laolang-pc:~/gitcode/cpp-study/fltk-demos/hello-world-cmake$ </code></pre>"},{"location":"fltk/hello-world-cmake/#python","title":"python \u811a\u672c","text":"copy_fltk_lib.py<pre><code>#!/usr/bin/python3\n# -*- coding: utf-8 -*-\nimport sys\nimport os\nimport subprocess\nif __name__ == '__main__':\nprint('-- copy fltk libs')\n# \u5de5\u7a0b\u8def\u5f84\nproj_path = sys.argv[1]\n# \u6784\u5efa\u8def\u5f84\nbuild_path = sys.argv[2]\n# \u6784\u5efa\u540e\u5e93\u5b58\u653e\u8def\u5f84\nlib_path = build_path + '/lib'\n# cmake FindFLTK \u67e5\u627e\u5230\u7684 fltk \u5e93\u5217\u8868, \u5305\u542b\u7cfb\u7edf\u5e93\nfltk_cmake_libs = sys.argv[3]\n# \u53ef\u6267\u884c\u7a0b\u5e8f\u540d\u79f0\napp_name = sys.argv[4]\n# lib \u76ee\u5f55\u4e0d\u5b58\u5728\u5219\u521b\u5efa\nif not os.path.exists(lib_path):\nos.makedirs(lib_path)\n# \u8fc7\u6ee4 fltk \u5e93\u8def\u5f84\u5217\u8868\nfltk_cmake_libs = fltk_cmake_libs.split(\";\")\nfltk_libs = []\nfor lib in fltk_cmake_libs:\nif \"fltk\" in lib:\nfltk_libs.append(lib)\n# print(fltk_libs)\n# \u6267\u884c ldd , \u67e5\u627e\u53ef\u6267\u884c\u7a0b\u5e8f\u9700\u8981\u7684 fltk \u5e93\nldd_command = 'ldd ' + build_path + '/bin/' + app_name\nstatus, ldd_res =subprocess.getstatusoutput(ldd_command)\nif 0 != status:\nprint(\"ldd app failed\", file = sys.stderr )\nexit(1)\nldd_res = ldd_res.split(\"\\n\")\nneed_fltk_libs = []\nfor lib in ldd_res:\nif \"fltk\" in lib:\nneed_fltk_libs.append(lib.split(\"=\")[0].strip())\n# print(need_fltk_libs)\n# \u590d\u5236 ftlk \u5230 lib \u8def\u5f84\nfor lib_sys in fltk_libs:\nfor lib_need in need_fltk_libs:\nlib_name = lib_need.split(\".\")[0] + \".so\" \nif lib_name in lib_sys:\ncommand = \"cp \" + lib_sys + \" \" + lib_path + \"/\" + lib_need\nprint(\"-- \" + command)\nstatus,_ = subprocess.getstatusoutput(command)\nif 0 != status:\nprint(\"copy lib\" + lib_name +\"failed\", file = sys.stderr )\nexit(1)\n</code></pre>"},{"location":"fltk/hello-world-cmake/#cmakeliststxt","title":"CMakeLists.txt","text":"\u9876\u5c42 CMakeLists.txt<pre><code>cmake_minimum_required(VERSION 3.25)\nset(CMAKE_CXX_STANDARD 14)\nset(CMAKE_CXX_STANDARD_REQUIRED ON)\nset(CMAKE_CXX_EXTENSIONS OFF)\nset(CMAKE_BUILD_WITH_INSTALL_RPATH True)\nset(lib_xmlparser xmlparser)\nproject(cpp-hello CXX)\nfind_package (Python3 COMPONENTS Interpreter Development REQUIRED)\nfind_package(FLTK REQUIRED)\ninclude_directories(${FLTK_INCLUDE_DIR})\nadd_subdirectory(src)\n</code></pre> src/main/CMakeLists.txt<pre><code>set(EXECUTABLE_OUTPUT_PATH ${CMAKE_BINARY_DIR}/bin)\nadd_executable(${PROJECT_NAME} main.cpp)\ntarget_include_directories(${PROJECT_NAME} PRIVATE ${PROJECT_SOURCE_DIR}/include)\ntarget_link_libraries(${PROJECT_NAME} PRIVATE ${FLTK_LIBRARIES} ${lib_xmlparser})\nset_target_properties(${PROJECT_NAME} PROPERTIES INSTALL_RPATH \"\\${ORIGIN}/../lib\")\n# add_custom_command(TARGET ${PROJECT_NAME} POST_BUILD\n#     COMMAND ${Python3_EXECUTABLE} ${CMAKE_SOURCE_DIR}/scripts/copy_fltk_lib.py \"${CMAKE_SOURCE_DIR}\" \"${CMAKE_BINARY_DIR}\" \"'${FLTK_LIBRARIES}'\" \"${PROJECT_NAME}\"\n# )\nadd_custom_target(copy_fltk_lib ALL\nDEPENDS\n${PROJECT_NAME}\nCOMMAND ${Python3_EXECUTABLE} ${CMAKE_SOURCE_DIR}/scripts/copy_fltk_lib.py \"${CMAKE_SOURCE_DIR}\" \"${CMAKE_BINARY_DIR}\" \"'${FLTK_LIBRARIES}'\" \"${PROJECT_NAME}\"\n)\n</code></pre>"},{"location":"fltk/hello-world-cmake/#c","title":"c++","text":"main.cpp<pre><code>#include &lt;iostream&gt;\n#include &lt;memory&gt;\n#include &lt;FL/Fl.H&gt;\n#include &lt;FL/Fl_Window.H&gt;\n#include &lt;FL/Fl_Box.H&gt;\n#include \"xmlparser/xmlparser.h\"\nint main(int argc, char **argv)\n{\nauto xmlparser_document = std::make_unique&lt;Document&gt;();\nstd::cout &lt;&lt; xmlparser_document-&gt;parse() &lt;&lt; std::endl;\nFl_Window *window = new Fl_Window(340, 180);\nFl_Box *box = new Fl_Box(20, 40, 300, 100, \"Hello, World!\");\nbox-&gt;box(FL_UP_BOX);\nbox-&gt;labelfont(FL_BOLD + FL_ITALIC);\nbox-&gt;labelsize(36);\nbox-&gt;labeltype(FL_SHADOW_LABEL);\nwindow-&gt;end();\nwindow-&gt;show(argc, argv);\nreturn Fl::run();\n}\n</code></pre>"},{"location":"fltk/hello-world-cmake/#_3","title":"\u8fd0\u884c\u6548\u679c","text":"<pre><code>laolang@laolang-pc:~/gitcode/cpp-study/fltk-demos/hello-world-cmake$ cmake -S . -B build &amp;&amp; cmake --build build\n-- The CXX compiler identification is GNU 11.3.0\n-- Detecting CXX compiler ABI info\n-- Detecting CXX compiler ABI info - done\n-- Check for working CXX compiler: /usr/bin/c++ - skipped\n-- Detecting CXX compile features\n-- Detecting CXX compile features - done\n-- Found Python3: /usr/bin/python3.10 (found version \"3.10.6\") found components: Interpreter Development Development.Module Development.Embed -- Found OpenGL: /usr/lib/x86_64-linux-gnu/libOpenGL.so   -- Found X11: /usr/include   -- Looking for XOpenDisplay in /usr/lib/x86_64-linux-gnu/libX11.so;/usr/lib/x86_64-linux-gnu/libXext.so\n-- Looking for XOpenDisplay in /usr/lib/x86_64-linux-gnu/libX11.so;/usr/lib/x86_64-linux-gnu/libXext.so - found\n-- Looking for gethostbyname\n-- Looking for gethostbyname - found\n-- Looking for connect\n-- Looking for connect - found\n-- Looking for remove\n-- Looking for remove - found\n-- Looking for shmat\n-- Looking for shmat - found\n-- Looking for IceConnectionNumber in ICE\n-- Looking for IceConnectionNumber in ICE - found\n-- Found FLTK: /usr/local/lib/libfltk_images.so;/usr/local/lib/libfltk_forms.so;/usr/local/lib/libfltk_gl.so;/usr/local/lib/libfltk.so  -- Configuring done (1.2s)\n-- Generating done (0.0s)\n-- Build files have been written to: /home/laolang/gitcode/cpp-study/fltk-demos/hello-world-cmake/build\n[ 20%] Building CXX object src/xmlparser/CMakeFiles/xmlparser.dir/document.cpp.o\n[ 40%] Building CXX object src/xmlparser/CMakeFiles/xmlparser.dir/node.cpp.o\n[ 60%] Linking CXX shared library ../../lib/libxmlparser.so\n[ 60%] Built target xmlparser\n[ 80%] Building CXX object src/main/CMakeFiles/cpp-hello.dir/main.cpp.o\n[100%] Linking CXX executable ../../bin/cpp-hello\n[100%] Built target cpp-hello\n-- copy fltk libs\n-- cp /usr/local/lib/libfltk.so /home/laolang/gitcode/cpp-study/fltk-demos/hello-world-cmake/build/lib/libfltk.so.1.3\n[100%] Built target copy_fltk_lib\nlaolang@laolang-pc:~/gitcode/cpp-study/fltk-demos/hello-world-cmake$ </code></pre>"},{"location":"fltk/hello-world-cmake/#_4","title":"\u91cd\u70b9","text":"<ol> <li>cmake \u63d0\u4f9b\u4e86 fltk \u7684 find \u811a\u672c</li> <li>\u6784\u5efa\u540e,\u4f7f\u7528\u5982\u4e0b\u811a\u672c\u5e76\u4e0d\u80fd\u590d\u5236 fltk \u5e93, \u9700\u8981\u5148\u590d\u5236fltk\u5e93, \u518d\u6267\u884c\u5982\u4e0b\u811a\u672c     <pre><code>#!/bin/bash\nLibDir=$PWD\"/lib\"\nTarget=$1\nlib_array=($(ldd $Target | grep -o \"/.*\" | grep -o \"/.*/[^[:space:]]*\"))\n$(mkdir $LibDir)\nfor Variable in ${lib_array[@]}\ndo\ncp \"$Variable\" $LibDir\ndone\n</code></pre></li> <li>\u590d\u5236\u811a\u672c\u6709\u4e24\u79cd\u65b9\u5f0f,\u4e00\u79cd\u662f <code>add_custom_command</code>, \u4e00\u79cd\u662f <code>add_custom_target</code>. \u63a8\u8350\u662f\u4f7f\u7528 <code>add_custom_target</code>. \u539f\u56e0\u662f <code>add_custom_command</code> \u6709\u4e24\u4e2a\u9650\u5236\uff1a<ul> <li>\u53ea\u6709\u5728\u76f8\u540c\u7684 <code>CMakeLists.txt</code>\u4e2d, \u5236\u5b9a\u4e86\u6240\u6709\u4f9d\u8d56\u4e8e\u5176\u8f93\u51fa\u7684\u76ee\u6807\u65f6\u624d\u6709\u6548</li> <li>\u5bf9\u4e8e\u4e0d\u540c\u7684\u72ec\u7acb\u76ee\u6807\uff0c\u4f7f\u7528 <code>add_custom_command</code> \u7684\u8f93\u51fa\u53ef\u4ee5\u91cd\u65b0\u6267\u884c\u5b9a\u5236\u547d\u4ee4. \u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u51b2\u7a81\uff0c\u5e94\u8be5\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\u7684\u53d1\u751f</li> </ul> </li> </ol>"},{"location":"fltk/hello-world/","title":"\u73af\u5883\u642d\u5efa","text":""},{"location":"fltk/hello-world/#_1","title":"\u53c2\u8003","text":"<p>https://blog.csdn.net/smart_jackli/article/details/128133452</p>"},{"location":"fltk/hello-world/#_2","title":"\u5b89\u88c5","text":"<p>\u5b89\u88c5\u4f9d\u8d56\u5e93 <pre><code>sudo apt-get install build-essential xorg-dev libx11-dev libcairo2-dev\n</code></pre></p> <p>\u4e0b\u8f7d https://www.fltk.org/software.php</p> <p>\u5b89\u88c5 <pre><code>./configure --enable-debug --enable-gl --enable-shared --enable-threads --enable-xdbe --enable-xft\n</code></pre></p> <p>\u76f8\u5173\u53c2\u6570</p> <p>--enable-cygwin :Enable the Cygwin libraries under WIN32</p> <p>--enable-debug: Enable debugging code &amp; symbols</p> <p>--disable-gl: Disable OpenGL support</p> <p>--enable-shared: Enable generation of shared libraries</p> <p>--enable-threads: Enable multithreading support</p> <p>--enable-xdbe: Enable the X double-buffer extension</p> <p>--enable-xft: Enable the Xft library for anti-aliased fonts under X11</p> <p>--bindir=/path: Set the location for executables [default = $prefix/bin]</p> <p>--datadir=/path: Set the location for data files. [default = $prefix/share]</p> <p>--libdir=/path: Set the location for libraries [default = $prefix/lib]</p> <p>--includedir=/path: Set the location for include files. [default = $prefix/include]</p> <p>--mandir=/path: Set the location for man pages. [default = $prefix/man]</p> <p>--prefix=/dir: Set the directory prefix for files [default = /usr/local]</p>"},{"location":"fltk/hello-world/#hello-world","title":"hello world","text":"hello.cpp<pre><code>#include &lt;FL/Fl.H&gt;\n#include &lt;FL/Fl_Window.H&gt;\n#include &lt;FL/Fl_Box.H&gt;\nint main(int argc, char **argv) {\nFl_Window *window = new Fl_Window(340,180);\nFl_Box *box = new Fl_Box(20,40,300,100,\"Hello, World!\");\nbox-&gt;box(FL_UP_BOX);\nbox-&gt;labelfont(FL_BOLD+FL_ITALIC);\nbox-&gt;labelsize(36);\nbox-&gt;labeltype(FL_SHADOW_LABEL);\nwindow-&gt;end();\nwindow-&gt;show(argc, argv);\nreturn Fl::run();\n}\n</code></pre> <p>\u7f16\u8bd1 <pre><code>fltk-config --compile hello.cpp\n</code></pre></p> <p>\u8fd0\u884c\u6548\u679c </p>"},{"location":"love2d/","title":"\u73af\u5883\u642d\u5efa\u4e0e\u53c2\u8003","text":""},{"location":"love2d/#_1","title":"\u5b98\u7f51","text":"<p>\u5b98\u7f51: https://love2d.org/</p> <p>wiki: https://love2d.org/wiki/Main_Page_(\u7b80\u4f53\u4e2d\u6587)</p>"},{"location":"love2d/#_2","title":"\u5b89\u88c5","text":"<p>\u53c2\u8003: https://love2d.org/wiki/Getting_Started_(\u7b80\u4f53\u4e2d\u6587)</p> <pre><code>sudo add-apt-repository ppa:bartbes/love-stable\nsudo apt-get update\nsudo apt-get install love\n</code></pre> <p>\u76f4\u63a5\u8fd0\u884c<code>love</code> </p>"},{"location":"love2d/#vscode","title":"\u4f7f\u7528 vscode","text":"<p>\u5b89\u88c5\u5982\u4e0b\u63d2\u4ef6</p> <ul> <li> <p>Love2D Support</p> </li> <li> <p>Love2d Snippets</p> </li> <li> <p>Love2d Made Easy</p> </li> <li> <p>love-launcher</p> </li> </ul> <p></p> <p>\u6253\u5f00\u8bbe\u7f6e, \u4fee\u6539\u5982\u4e0b\u4f4d\u7f6e</p> <p></p> <p></p>"},{"location":"love2d/#hello-world","title":"hello world","text":"<p>Note</p> <p><code>love2d</code> \u7684\u542f\u52a8\u6587\u4ef6\u5fc5\u987b\u4e3a<code>main.lua</code></p>"},{"location":"love2d/#_3","title":"\u4ee3\u7801","text":"main.lua<pre><code>function love.draw()\nlove.graphics.rectangle(\"fill\", 10, 100, 120, 80)\nend\n</code></pre>"},{"location":"love2d/#_4","title":"\u8fd0\u884c\u65b9\u6cd5","text":"<p>\u7b2c\u4e00\u79cd:</p> <p></p> <p>\u7b2c\u4e8c\u79cd:\u4fdd\u5b58\u540e\u7acb\u5373\u8fd0\u884c</p> <p></p>"},{"location":"love2d/#_5","title":"\u8fd0\u884c\u6548\u679c","text":""},{"location":"love2d/#_6","title":"\u53c2\u8003\u8d44\u6599","text":""},{"location":"love2d/#lua","title":"lua\u8d44\u6599","text":"<p>Lua 5.3 \u53c2\u8003\u624b\u518c \u4e91\u98ce\u7ffb\u8bd1</p> <p>Lua \u6700\u5168\u7684\u5feb\u901f\u5165\u95e8\u6559\u7a0b</p> <p>Visual Studio Code -&gt; VSCode \u5f00\u53d1\u73af\u5883\u642d\u5efa ---- Lua \u4ee3\u7801\u8c03\u8bd5\uff08code runner \u63d2\u4ef6\uff09</p>"},{"location":"love2d/#love2d","title":"love2d","text":"<p>\u5f00\u6e90\u793e\u533a: https://github.com/love2d-community</p> <p>https://www.love2d.org/wiki/Category:Tutorials \u4e2d\u6709\u4e00\u4e2a How to L\u00d6VE. \u4ecb\u7ecd\u6bd4\u8f83\u8be6\u7ec6, \u5bf9\u5e94\u7684\u89c6\u9891\u6559\u7a0b:Love2d\u6e38\u620f\u5f00\u53d1\u5165\u95e8\u4e2d\u6587\u6559\u7a0b\u5168\u7f51\u72ec\u5bb6, \u5bf9\u5e94\u7684\u535a\u5ba2: Love2d\u4ece\u9752\u94dc\u5230\u738b\u8005</p> <p>\u3010Udemy\u9ad8\u8d5e+\u4e2d\u82f1\u5b57\u5e55\u3011\u4f7f\u7528 L\u00d6VE 2D \u548c Lua \u8fdb\u884c\u6e38\u620f\u5f00\u53d1 \u2013 \u5b8c\u6574\u8bfe\u7a0b - freeCodeCamp</p> <p>love2d \u6559\u7a0b \u534a\u5c71</p>"},{"location":"love2d/#box2d","title":"box2d","text":"<p>Box2D v2.1.0\u7528\u6237\u624b\u518c\u7ffb\u8bd1</p>"},{"location":"love2d/base/","title":"\u57fa\u672c\u4f7f\u7528","text":""},{"location":"love2d/base/#_1","title":"\u4e00\u4e2a\u78b0\u649e\u68c0\u7684\u4f8b\u5b50","text":"main.lua<pre><code>local fixedInterval = 1 / 60 -- 60 FPS\nlocal fixedTimer = 0\nfunction love.load()\nlove.physics.setMeter(48)\nworld = love.physics.newWorld(0, 9.81 * 48, true)\nground = love.physics.newBody(world, 0, 0, \"static\")\nground_shape = love.physics.newRectangleShape(0, 500, 600, 10)\nground_fixture = love.physics.newFixture(ground, ground_shape)\nground_fixture:setUserData(\"ground\")\n-- \u5750\u6807\u4e0e\u901f\u5ea6\nx = 24\ny = 24\nspeed = 200\nhero = love.physics.newBody(world, 24, 24, \"dynamic\")\nhero:setGravityScale(0) -- \u91cd\u529b\u4e3a 0\nhero_shape = love.physics.newRectangleShape(48, 48)\nhero_fixture = love.physics.newFixture(hero, hero_shape)\nhero_fixture:setUserData(\"hero\")\n-- \u56fe\u7247\nimg = love.graphics.newImage(\"assets/sprite/box_red.png\")\n-- \u78b0\u649e\u56de\u8c03\nworld:setCallbacks(beginContact, endContact, preSolve, postSolve)\nend\nlocal function fixUpdate()\n-- \u6839\u636e\u65b9\u5411\u952e\u79fb\u52a8\u521a\u4f53\nif love.keyboard.isDown(\"up\") then\nhero:setLinearVelocity(0, -speed)\nelseif love.keyboard.isDown(\"right\") then\nhero:setLinearVelocity(speed, 0)\nelseif love.keyboard.isDown(\"down\") then\nhero:setLinearVelocity(0, speed)\nelseif love.keyboard.isDown(\"left\") then\nhero:setLinearVelocity(-speed, 0)\nend\nend\nfunction love.update(dt)\n-- \u7d2f\u52a0\u8ba1\u65f6\u5668\u7684\u65f6\u95f4\nfixedTimer = fixedTimer + dt\n-- \u5982\u679c\u8ba1\u65f6\u5668\u7684\u65f6\u95f4\u8d85\u8fc7\u4e86\u56fa\u5b9a\u65f6\u95f4\u95f4\u9694\uff0c\u6267\u884c FixedUpdate \u903b\u8f91\nwhile fixedTimer &gt;= fixedInterval do\nfixedTimer = fixedTimer - fixedInterval\n-- \u5728\u8fd9\u91cc\u6267\u884c FixedUpdate \u7684\u903b\u8f91\nfixUpdate()\nend\nworld:update(dt)\nend\nfunction love.draw()\nlove.graphics.polygon(\"line\", ground:getWorldPoints(ground_shape:getPoints()))\nlove.graphics.draw(img, hero:getX() - 24, hero:getY() - 24)\nlove.graphics.polygon(\"line\", hero:getWorldPoints(hero_shape:getPoints()))\nhero:setLinearVelocity(0, 0) -- \u521d\u59cb\u901f\u5ea6\u4e3a 0\nend\nfunction beginContact(fixture1, fixture2, contact)\n-- \u83b7\u53d6\u78b0\u649e\u4f53\u7684\u7528\u6237\u6570\u636e\nlocal userData1 = fixture1:getUserData()\nlocal userData2 = fixture2:getUserData()\n-- \u5728\u8fd9\u91cc\u5b9e\u73b0\u78b0\u649e\u903b\u8f91\nprint(\"beginContact\", userData1, userData2)\nend\nfunction endContact(fixture1, fixture2, contact)\n-- \u83b7\u53d6\u78b0\u649e\u4f53\u7684\u7528\u6237\u6570\u636e\nlocal userData1 = fixture1:getUserData()\nlocal userData2 = fixture2:getUserData()\n-- \u5728\u8fd9\u91cc\u5b9e\u73b0\u78b0\u649e\u903b\u8f91\n-- print(\"endContact\", userData1, userData2)\nend\nfunction preSolve(fixture1, fixture2, contact)\n-- \u83b7\u53d6\u78b0\u649e\u4f53\u7684\u7528\u6237\u6570\u636e\nlocal userData1 = fixture1:getUserData()\nlocal userData2 = fixture2:getUserData()\n-- \u5728\u8fd9\u91cc\u5b9e\u73b0\u78b0\u649e\u903b\u8f91\n-- print(\"preSolve\", userData1, userData2)\nend\nfunction postSolve(fixture1, fixture2, contact, normal_impulse, tangent_impulse)\n-- \u83b7\u53d6\u78b0\u649e\u4f53\u7684\u7528\u6237\u6570\u636e\nlocal userData1 = fixture1:getUserData()\nlocal userData2 = fixture2:getUserData()\n-- \u5728\u8fd9\u91cc\u5b9e\u73b0\u78b0\u649e\u903b\u8f91\n-- print(\"postSolve\", userData1, userData2)\nend\n</code></pre>"}]}